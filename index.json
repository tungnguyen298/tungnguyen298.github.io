[
{
	"uri": "/1-infrastructure/",
	"title": "Setting up Infrastructure",
	"tags": [],
	"description": "",
	"content": "Tổng quan In this part, you will set up the network infrastructure with CloudFormation Template for the lab with the following architecture:\nBelow is resource you need to deploy for your lab:\n First EC2 Host at VPC1 and Third EC2 Host at VPC3 can connect via Internet Second EC2 Host at VPC2 and Fourth EC2 Host at VPC 4 cannot connect via Internet  Thiết lập Hạ tầng  Upload template tgw-lab.yaml t link this link or download below file:    tgw-lab   tgw-lab.yaml (7 KB)    Access to CloudFormation Management Conole by typing CloudFormation to address bar.  At left navigation, Choose Stacks. then choose Create Stack and With new resources (standard).  Choose Upload a template file, choose tgw-lab.yaml from source download at step 1 , choose Next.  At Specify stack details, type Stack name (EX: Lab-Stack), choose your SSH key, then choose Next:  At Configure stack options, keep default then choose Next.   At Review, check infomration then choose Create stack.\n  After CloudFormation creatted, Go to folder stored SSH Key pair and run below command to copy key pair to First EC2 Host and Third EC2 Host to prepare for next step.\nscp -i \u0026lt;key name\u0026gt; \u0026lt;key name\u0026gt; ec2-user@\u0026lt;public ip\u0026gt;:   Command scp already available in Linux and Mac OS. If you are using Windows OS, you need to install PuTTY to use command and connect to EC2 instances\n "
},
{
	"uri": "/",
	"title": "Thiết lập Transit Gateway",
	"tags": [],
	"description": "",
	"content": "Thiết lập Transit Gateway Tổng quan In this part, you will set up the network infrastructure with CloudFormation Template for the lab with the following architecture: AWS Transit Gateway:\nIn previous labs Thiêt lập VPC Peering, we have configured Peering Connection between 2 VPC. Now, if we want to connect 4 VPCs together, How many peering connection will we need ?\nAnswer: You will need 6 Peering Conneection to connect 4 VPCs together. In case, you need to connect 6, 4 or 10 VPCs. you will see that Peering Connection is not highly scalable\nAWS Transit Gateway (AWS TGW) To resolve limitation of Peering Connection, AWS Transite Gateway used to connect VPCs and on-premises networks through a central hub. This simplifies the network and ends complex routing. It works like a cloud router - each new connection is made only 1.\nAWS Transit Gateway Attachment AWS Transit Gateway Attachment is a tool to assign the subnets of each VPC to be connected to an initialized TGW. Transit Gateway Attachment operates on the scale of Availability Zone (AZ-level). In VPC, when a subnet in an AZ has a Transit Gateway Attachment with a TGW, other subnets in the same AZ can connect to that TGW.\nThis lab will cost your AWS account fees. Instance version should be t3.nano. In addition, the lab has cost associated with Transit Gateway. Therefore, you have to delete the lab template at the end of the lab to avoid additional costs\n Nội dung  1. Setting Up Infrastructure 2. Create Transit Gateway 3. Create Transit Gateway Attachments 4. Create Transit Gateway Route Tables 5. Assign Transit Gateway Routes to VPC Route Tables  "
},
{
	"uri": "/2-create-transitgw/",
	"title": "Create Transit Gateway",
	"tags": [],
	"description": "",
	"content": "Over view In this part, you will create Transit Gateway on AWS Cloud.\nContent:\n Transit Gateway  Tạo Transit Gateway  Open VPC Management Console, Choose Transit Gateway at left side bar, then choose Create Transit Gateway.   At Create Transit Gateway page, fill up information as below\n Name tag: lab-tgw Description: Transit Gateway Configure the Transit Gateway: Uncheck Default route table association and Default route table propagation. We will configure manually for Default route table association and Default route table propagation to understand how Route Table work\n     Choose Create Transit Gateway.\n  We will wait 1 - 2 minutes for Transit Gateway become available  "
},
{
	"uri": "/3-transitgw-attachment/",
	"title": "Transit Gateway Attachments",
	"tags": [],
	"description": "",
	"content": "Overview In this part, You will configure Transit Gateway Attachments to assign VPC to Transit Gateway .\nContent:\n Tạo Transit Gateway Attachments  Create Transit Gateway Attachments  Open VPC Management Console, choose Transit Gateway Attachments at left side bar, then choose Create Transit Gateway Attachment.  At page: Create Transit Gateway Attachment, select belown information then choose Create attachment:  Transit Gateway ID: select generated Transit Gateway ID. Attachment type: choose VPC to assgin object as VPC Attachment name tag: enter the corresponding VPC with VPC ID (EX: VPC1) VPC ID: choose First VPC, VPC1. Subnet ID: In this infrastructure, each VPC contains only one subnet. Therefore, you only have one choice, it is specific AZ\u0026rsquo;s subnet.     Repeat Step 1-2 with each VPC then we will get architecture as showed in Overview. Note: In this lab each VPC only have 1 subnet but in production environment you will attach all subnet to Transit Gateway.\n  Now, you need to SSH to instances in VPC1 and VPC3. Try pinging the private IP addresses of other instances. This should not work because assigning VPCs to Transit Gateway does not create routing topologies in this case Default route table association and Default route table propagation were disabled in the previous Transit Gateway creation.\n  *The image above showed ping failed from First EC2 Host to Fourth EC2 Host.\n"
},
{
	"uri": "/4-transitgw-rtb/",
	"title": "Create Route Table for TGW",
	"tags": [],
	"description": "",
	"content": "Overview In this section, You will create Transit Gateway Route Table so that Transit Gateway knows which VPC attachment are available to send and receive traffic deliverd through TRansit Gateway\nContent:\n Tạo Transit Gateway Route Tables  Create Transit Gateway Route Table  Open VPC Management Console, Choose Transit Gateway Route Tables at left side bar, then choose Create Transit Gateway Route Table.  Enter Name tag (VD:lab-TGW-RT), Select Transit Gateway which you created, then choose Create Transit Gateway Route Table.  After Route Table are available, tick to route table which you created, choosetab Associations, then click Create association.  Lần lượt đính từng VPC. Quá trình association báo Transit Gateway biết route table của VPC nào sẽ gửi các data packet tới Transit Gateway.   Move to tab Propagations, click to Create propagation. s   Lần lượt đính từng VPC. Quá trình propagation báo Transit Gateway biết route table của VPC nào sẽ nhận các data packet từ Transit Gateway.\n  "
},
{
	"uri": "/5-attach-rtb/",
	"title": "Add Gateway to Route Tables &amp; Result",
	"tags": [],
	"description": "",
	"content": "Tổng quan In this section, bạn sẽ cấu hình route table ở từng VPC để route traffic tới các VPC còn lại thông qua Transit Gateway.\nNội dung:\n Thêm Transit Gateway Routes vào VPC Route Tables Kiểm tra kết quả  Thêm Transit Gateway Routes vào VPC Route Tables   Open VPC Management Console, choose Route Tables at left side bar. Chúng ta quy ước rằng:\n First VPC Main Route Table = Route Table của VPC1 Second VPC Main Route Table = Route Table của VPC2 Third VPC Main Route Table = Route Table của VPC3 Fourth VPC Main Route Table = Route Table của VPC4    Với Route Table của VPC1 và VPC3, chọn Edit routes để thêm route với thông số sau:\n Destination: 172.16.0.0/16 Target: chọn Transit Gateway bạn dã tạo.    Điều này cho VPC1 và VPC3 biết rằng tất cả packet cho bất kỳ mạng 172.16.x.x nào đều thông qua Transit Gateway.\n Tương tự với Route Table của VPC2 và VPC4, chọn Edit routes để thêm route với thông số sau:  Destination: 0.0.0.0/0 Target: chọn Transit Gateway bạn đã tạo    Điều này cho VPC2 và VPC4 biết rằng tất cả packet cho bất kỳ mạng nào khác ngoài mạng local đều thông qua Transit Gateway.\n Như vậy, bạn đã hoàn thành công tác cấu hình cho phép bốn VPC liên lạc với nhau thông qua Transit Gateway. Hãy cùng kiểm tra xem các EC2 instance từ VPC1 và VPC3 có thể kết nối tới các EC2 instance ở VPC2 và VPC4 không nhé!\nKiểm tra kết quả  Kết nối SSH đến EC2 instance ở VPC1 và xác thực bạn có thể ping www.amazon.com để xác thực kiểm tra kết nối internet  Ping đến IP của EC2 instance trong VPC2.  Sử dụng Key Pair bạn đã copy vào instance ở phần trước, kết nối SSH từ EC2 instance ở VPC1 tới EC2 instance ở VPC2 bằng các câu lệnh:  chmod 400 AP-SE-key.pem để ngăn không người dùng công cộng xem được Key Pair trong instance. Đây là điều kiện an ninh tiên quyết để sử dụng Key Pair. ssh -i \u0026quot;\u0026lt;YourKey.pem\u0026gt;\u0026quot; ec2-user@\u0026lt;YourEC2IP\u0026gt; để kết nối SSH tới EC2 instance từ Terminal    Lần lượt ping vào địa chỉ IP Private của EC2 instance ở VPC3 và VPC4  Chúc mừng!!! Các EC2 Instance ở các VPC của bạn đã có thể kết nối với nhau thông qua Transit Gateway.\n"
},
{
	"uri": "/6-cleanup/",
	"title": "Clean up",
	"tags": [],
	"description": "",
	"content": "Bạn sẽ dọn dẹp tài nguyên theo thứ tự sau:\n Xóa TGW Attachments  Truy cập vào VPC Management Console Ở thanh bên trái, chọn Transit Gateway Attachments. Lần lượt tick vào các Attachment liên quan tới bài, chọn Actions, và chọn Delete Trong prompt, chọn Delete. Đọi 1-2 để hoàn thành việc xóa các attachment   Xóa Transit Gateway  Truy cập vào VPC Management Console Ở thanh bên trái, chọn Transit Gateways. Tick vào các Attachment liên quan tới bài, chọn Actions, và chọn Delete Trong prompt, chọn Delete. Bạn phải đợi TGW Attachments được xóa hoàn toàn trước khi xóa TGW. Đọi 1-2 để hoàn thành việc xóa TGW.   Xóa CloudFormation Stack  Truy cập vào CloudFormation Management Console Ở thanh bên trái, chọn Stacks. Tick vào CloudFormation Stack liên quan tới bài lab và chọn Delete. Trong prompt, chọn Delete stack. Đọi vài phút cho tới khi CloudFormation xóa bỏ hết tài nguyên.    "
},
{
	"uri": "/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
}]