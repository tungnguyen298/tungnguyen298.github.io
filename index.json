[
{
	"uri": "/1-infrastructure/",
	"title": "Setting up Infrastructure",
	"tags": [],
	"description": "",
	"content": "Overview In this section, you will set up the network infrastructure with CloudFormation Template for the lab with the following architecture:\nBelow is resource you need to deploy for your lab:\n First EC2 Host at VPC1 and Third EC2 Host at VPC3 can connect via Internet Second EC2 Host at VPC2 and Fourth EC2 Host at VPC 4 cannot connect via Internet  Setting up Infrastructure  Upload template tgw-lab.yaml t link this link or download below file:  \r\rtgw-lab\r\r\rtgw-lab.yaml\r\r(7 ko)\r\r\r\rAccess to CloudFormation Management Conole by typing CloudFormation to address bar.  At left side bar, Choose Stacks. then choose Create Stack and With new resources (standard).  Choose Upload a template file, choose tgw-lab.yaml from source download at step 1 , choose Next.  At Specify stack details, type Stack name (EX: Lab-Stack), choose your SSH key, then choose Next:  At Configure stack options, keep default then choose Next.   At Review, check infomration then choose Create stack.\n  After CloudFormation creatted, Go to folder stored SSH Key pair and run below command to copy key pair to First EC2 Host and Third EC2 Host to prepare for next step.\nscp -i \u0026lt;key name\u0026gt; \u0026lt;key name\u0026gt; ec2-user@\u0026lt;public ip\u0026gt;:   Command scp already available in Linux and Mac OS. If you are using Windows OS, you need to install PuTTY to use command and connect to EC2 instances\n\r"
},
{
	"uri": "/",
	"title": "Setup Transit Gateway",
	"tags": [],
	"description": "",
	"content": "Transit Gateway Setup Overview In this section, you will set up the network infrastructure with CloudFormation Template for the lab with the following architecture: AWS Transit Gateway:\nIn previous labs Configure VPC Peering, we have configured Peering Connection between 2 VPC. Now, if we want to connect 4 VPCs together, How many peering connection will we need ?\nAnswer: You will need 6 Peering Conneection to connect 4 VPCs together. In case, you need to connect 6, 4 or 10 VPCs. you will see that Peering Connection is not highly scalable\nAWS Transit Gateway (AWS TGW) To resolve limitation of Peering Connection, AWS Transit Gateway used to connect VPCs and on-premises networks through a central hub. This simplifies the network and ends complex routing. It works like a cloud router - each new connection is made only 1.\nAWS Transit Gateway Attachment AWS Transit Gateway Attachment is a tool to assign the subnets of each VPC to be connected to an initialized TGW. Transit Gateway Attachment operates on the scale of Availability Zone (AZ-level). In VPC, when a subnet in an AZ has a Transit Gateway Attachment with a TGW, other subnets in the same AZ can connect to that TGW.\nThis lab will cost your AWS account fees. Instance version should be t3.nano. In addition, the lab has cost associated with Transit Gateway. Therefore, you have to delete the lab template at the end of the lab to avoid additional costs\n\rNội dung  1. Setting Up Infrastructure 2. Create Transit Gateway 3. Create Transit Gateway Attachments 4. Create Transit Gateway Route Tables 5. Assign Transit Gateway Routes to VPC Route Tables  "
},
{
	"uri": "/2-create-transitgw/",
	"title": "Create Transit Gateway",
	"tags": [],
	"description": "",
	"content": "Overview In this section, you will create Transit Gateway on AWS Cloud.\nContent:\n Transit Gateway  Tạo Transit Gateway  Open VPC Management Console, Choose Transit Gateway at left side bar, then choose Create Transit Gateway.   At Create Transit Gateway page, fill up information as below\n Name tag: lab-tgw Description: Transit Gateway Configure the Transit Gateway: Uncheck Default route table association and Default route table propagation. We will configure manually for Default route table association and Default route table propagation to understand how Route Table work\n\r    Choose Create Transit Gateway.\n  We will wait 1 - 2 minutes for Transit Gateway become available  "
},
{
	"uri": "/3-transitgw-attachment/",
	"title": "Transit Gateway Attachments",
	"tags": [],
	"description": "",
	"content": "Overview In this section, You will configure Transit Gateway Attachments to assign VPC to Transit Gateway .\nContent:\n Create Transit Gateway Attachments  Create Transit Gateway Attachments  Open VPC Management Console, choose Transit Gateway Attachments at left side bar, then choose Create Transit Gateway Attachment.  At page: Create Transit Gateway Attachment, select belown information then choose Create attachment:  Transit Gateway ID: select generated Transit Gateway ID. Attachment type: choose VPC to assgin object as VPC Attachment name tag: enter the corresponding VPC with VPC ID (EX: VPC1) VPC ID: choose First VPC, VPC1. Subnet ID: In this infrastructure, each VPC contains only one subnet. Therefore, you only have one choice, it is specific AZ\u0026rsquo;s subnet.     Repeat Step 1-2 with each VPC then we will get architecture as showed in Overview. Note: In this lab each VPC only have 1 subnet but in production environment you will attach all subnet to Transit Gateway.\n  Now, you need to SSH to instances in VPC1 and VPC3. Try pinging the private IP addresses of other instances. This should not work because assigning VPCs to Transit Gateway does not create routing topologies in this case Default route table association and Default route table propagation were disabled in the previous Transit Gateway creation.\n  *The image above showed ping failed from First EC2 Host to Fourth EC2 Host.\n"
},
{
	"uri": "/4-transitgw-rtb/",
	"title": "Create Route Table for TGW",
	"tags": [],
	"description": "",
	"content": "Overview In this section, You will create Transit Gateway Route Table so that Transit Gateway knows which VPC attachment are available to send and receive traffic deliverd through TRansit Gateway\nContent:\n Create Transit Gateway Route Tables  Create Transit Gateway Route Table  Open VPC Management Console, Choose Transit Gateway Route Tables at left side bar, then choose Create Transit Gateway Route Table.  Enter Name tag (VD:lab-TGW-RT), Select Transit Gateway which you created, then choose Create Transit Gateway Route Table.  After Route Table are available, tick to route table which you created, choose tab Associations, then click Create association.  Assigning VPC to Association. During Association process, Transit Gateway will know which VPC\u0026rsquo;s route table should send packet to Transit Gateway.   Move to tab Propagations, click to Create propagation. s   Lần lượt đính từng VPC. Quá trình propagation báo Transit Gateway biết route table của VPC nào sẽ nhận các data packet từ Transit Gateway.\n  "
},
{
	"uri": "/5-attach-rtb/",
	"title": "Add Gateway to Route Tables &amp; Result",
	"tags": [],
	"description": "",
	"content": "Overview In this section, You will configure the route table in each VPC to route traffic to the remaining VPCs through the Transit Gateways.\nContent:\n Adding Transit Gateway Routes to VPC Route Tables Checking Result  Add Transit Gateway Routes to VPC Route Tables   Open VPC Management Console, choose Route Tables at left side bar. Chúng ta quy ước rằng:\n First VPC Main Route Table = Route Table of VPC1 Second VPC Main Route Table = Route Table of VPC2 Third VPC Main Route Table = Route Table of VPC3 Fourth VPC Main Route Table = Route Table of VPC4    For Route Table of VPC1 and VPC3, choose Edit routes then add route with below information:\n Destination: 172.16.0.0/16 Target: choose Transit Gateway.    This means VPC1 and VPC3 can understand that all packet for net: 172.16.x.x go through Transit Gateway\n\rFor Route Table of VPC2 and VPC4, choose Edit routes then add route with below information:  Destination: 0.0.0.0/0 Target: choose Transit Gateway.    This means VPC2 and VPC4 can understand that packet for all network (except local network) go through Transit Gateway\n\rNow, you have completed the configuration to allow 4 VPCs can communicate together through Transit Gateway. Let\u0026rsquo;s check if EC2 instance from VPC1 and VPC3 cannot connect to VPC2 and VPC4\nCheck:  Connecting to EC2 instance in VPC1 via SSH then ping to www.amazon.com to confirm EC2 can access to internet  Ping to IP of EC2 instance in VPC2.  Using key pair you copied to instance in previous section, using SSH to connect EC2 instance from VPC1 to EC2 instanc in VP2 by command  chmod 400 AP-SE-key.pem to prevent public users seeing Key Pair in the instance. This is a prerequisite of security to use Key Pair. ssh -i \u0026quot;\u0026lt;YourKey.pem\u0026gt;\u0026quot; ec2-user@\u0026lt;YourEC2IP\u0026gt; to connect to EC2 via SSH from Terminal    Ping to Private IP of EC2 instance in VPC3 and VPC4  Congratulation!!! The EC2 istance in your VPCs can connect together through Transit Gateway.\n"
},
{
	"uri": "/6-cleanup/",
	"title": "Clean up",
	"tags": [],
	"description": "",
	"content": "Clean up your resources following below order:\n Delete TGW Attachments  Access to VPC Management Console In left side bar, choose Transit Gateway Attachments. Tick to Attachment which you created for this lab, choose Actions, then click to Delete Choose: Delete. It will take 1 - 2 minutes to delete.   Remove Transit Gateway  Access to VPC Management Console At left side bar, choose Transit Gateways. Tick to Attachment related to this lab, choose Actions, then choose Delete Choose: Delete. You have to wait for TGW Attachment to be completely removed before deleting TGW. It will take 1 - 2 minutes to delete.   Remove CloudFormation Stack  Access to CloudFormation Management Console At left side bar, choose Stacks. Tick to CloudFormation Stack related to this lab then choose Delete. Choose: Delete stack. It will take some minutes until CloudFormation removes all resource.    "
},
{
	"uri": "/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
}]